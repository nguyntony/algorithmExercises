# 3. Fibonacci Sequence
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

a = 0  # starting value
b = 1  # following value
sum = 0  # to keep track of the sum of numbers.


while a < 4000000:  # we want to stop at a certain number.
    if a % 2 == 0:  # to grab only the even values.
        print(a)
        sum += a  # this will add all even numbers to one another.
    c = a + b
    a = b
    b = c

print(
    f"The sum of even-valued terms that do not exceed four million is:\n{sum}")

# list = []

# on = True
# while on:
#     print(a)
#     c = a + b
#     a = b
#     b = c
#     list.append(a)
#     decision = input("Do you want to stop? ")
#     if decision == "yes":
#         on = False
#         print(list)


# we start at 0 and then the next number will be 1
# that is what we have done with a and b
# c will add the two variables to produce the following value.
# now a will be b and b will be c
# and for this particular code, I am using a (the starting value) as the condition because if I use b it will skip the last value because while a will fulfil the condition it won't run because b exited the loop.
# sum needs to be at the top of the while loop bc we want to include the first initial values a and b
# if I put sum at the end of the while loop, the values a and b will change bc of lines(14-16)
